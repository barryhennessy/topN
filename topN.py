#! /usr/bin/env python

from argparse import ArgumentParser
from memory_profiler import profile

from io import IO
from top_n import TopN

__author__ = 'barryhennessy'


def run(args):
    """Runs the core of the script; reading the file and counting the top n
    ints

    Split out as a separate function to facilitate optional profiling

    :param args: the arguments object generated by the script call
    """
    io = IO()
    reader = io.read(args.path)

    top = TopN(args.n)

    for number in reader:
        top.push(number)

    top_n = top.get_top_n()

    print("\n".join(map(str, top_n)))


if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument("path", type=str)
    parser.add_argument(
        "-n",
        help="the top n integers to count",
        required=True
    )
    parser.add_argument(
        "--mem-profile",
        action='store_true',
        help="profile the script to examine it's memory performance"
    )

    args = parser.parse_args()

    if args.mem_profile:
        profile(run)(args)
    else:
        run(args)
